#@ load("@ytt:data", "data")
#! This for loop will loop over the namespace list in desired-namespaces.yaml and will create those namespaces.
#! NOTE: if you have another tool like Tanzu Mission Control or some other process that is taking care of creating namespaces for you,
#! and you donâ€™t want namespace provisioner to create the namespaces, you can delete this file from your GitOps install repository.
#@ for ns in data.values.namespaces:
---
apiVersion: carto.run/v1alpha1
kind: Deliverable
metadata:
  name: #@ ns.name
  labels:
    app.kubernetes.io/part-of: #@ ns.app.kubernetes.io/part-of
    apps.tanzu.vmware.com/workload-type: #@ ns.apps.tanzu.vmware.com/workload-type
    app.kubernetes.io/component: #@ ns.app.kubernetes.io/component
    app.tanzu.vmware.com/deliverable-type: #@ ns.app.tanzu.vmware.com/deliverable-type
    carto.run/cluster-template-name: #@ ns.carto.run/cluster-template-name
    carto.run/resource-name: #@ ns.carto.run/resource-name
    carto.run/supply-chain-name: #@ ns.carto.run/supply-chain-name
    carto.run/template-kind: #@ ns.carto.run/template-kind
    carto.run/template-lifecycle: #@ ns.carto.run/template-lifecycle
    carto.run/workload-name: #@ ns.carto.run/workload-name
    carto.run/workload-namespace: #@ ns.carto.run/workload-namespace
spec:
  source:
    image: #@ ns.image
#@ end

